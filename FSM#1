;copy paste from PWM_demo.asm (sets up PWM using timer 2)
$NOLIST
$MODN76E003
$LIST

;  N76E003 pinout:
;                               -------
;       PWM2/IC6/T0/AIN4/P0.5 -|1    20|- P0.4/AIN5/STADC/PWM3/IC3
;               TXD/AIN3/P0.6 -|2    19|- P0.3/PWM5/IC5/AIN6
;               RXD/AIN2/P0.7 -|3    18|- P0.2/ICPCK/OCDCK/RXD_1/[SCL]
;                    RST/P2.0 -|4    17|- P0.1/PWM4/IC4/MISO
;        INT0/OSCIN/AIN1/P3.0 -|5    16|- P0.0/PWM3/IC3/MOSI/T1
;              INT1/AIN0/P1.7 -|6    15|- P1.0/PWM2/IC2/SPCLK
;                         GND -|7    14|- P1.1/PWM1/IC1/AIN7/CLO
;[SDA]/TXD_1/ICPDA/OCDDA/P1.6 -|8    13|- P1.2/PWM0/IC0
;                         VDD -|9    12|- P1.3/SCL/[STADC]
;            PWM5/IC7/SS/P1.5 -|10   11|- P1.4/SDA/FB/PWM1
;                               -------
;

DSEG ;variable initialization
fsm1_state: ds 1 ;state variable for fsm1
tempsoak: ds 1 ;150C +/- 20C
timesoak: ds 1 ;soak time <= 60s
temprefl: ds 1 ;240C > temp >= 220C
timerefl: ds 1 ;45s > 

;need auto termination !!
;maybe in state 1, track the time and temp, jump to state 0 if != 50C in 60s
;ie. set bit if auto termination cond met, and use jb 

fsm1:
;in case we have other fsms
    mov a, fsm1_state

fsm1_state0:
    cjne a, #0, fsm1_state1
    mov pwm, #0
    ;jb pb, fsm1_state0_done
    jnb pb, $ ;debounce
    mov fsm1_state, #1 ;next state transition
fsm1_state0_done: 
    ljmp fsm1; !! OR whatever is next, ie. another fsm

fsm1_state1:
    cjne a, #1, fsm1_state2
    mov pwm, #100
    mov sec, #0
    mov a, tempsoak
    clr c
    subb a, temp
    jnc fsm1_state1_done
    mov fsm1_state, #2
fsm1_state1_done:
ljmp fsm1

